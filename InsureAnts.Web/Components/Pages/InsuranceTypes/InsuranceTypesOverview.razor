@page "/insuranceTypesOverview"
@using InsureAnts.Application.Features.Abstractions
@using InsureAnts.Application.Features.InsuranceTypes
@using InsureAnts.Domain.Entities
@using InsureAnts.Web.Components.Shared
@inherits AppEditableTableComponent<GetInsuranceTypesQuery, InsuranceType, AddInsuranceTypeForm, EditInsuranceTypeForm>

<MudTable @ref="Table" ServerData="TableServerData" Dense="true" Hover="true" Striped="true" AllowUnsorted="false">
	<ToolBarContent>
		<div class="d-flex gap-4 w-100 justify-space-between align-end">
			<MudText Typo="Typo.h6">Insurance Types</MudText>

			<MudTextField @bind-Value="QueryRequest.SearchTerm"
						  T="string"
						  OnKeyUp="ReloadTableOnEnter"
						  Placeholder="Search"
						  Clearable="true"
						  Adornment="Adornment.Start"
						  AdornmentIcon="@Icons.Material.Filled.Search"
						  IconSize="Size.Medium"
						  Class="mt-0"
						  autocomplete="off"
						  id="filter" />

			<MudButton OnClick="AddItem" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add">Add new</MudButton>
		</div>
	</ToolBarContent>
	<HeaderContent>
		<MudTh>
			<MudTableSortLabel T="InsuranceType" SortLabel="@nameof(InsuranceType.Name)" InitialDirection="SortDirection.Ascending">
				Name
			</MudTableSortLabel>
		</MudTh>
		<MudTh></MudTh>
	</HeaderContent>
	<RowTemplate>
		<MudTd>
			<MudText>@context.Name</MudText>
		</MudTd>

		<MudTd Class="d-flex justify-end">
			<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" />
			<MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" OnClick="@(() => DeleteItemAsync(context))" />
		</MudTd>
	</RowTemplate>
	<NoRecordsContent>
		<MudText>There are no items to show in this view.</MudText>
	</NoRecordsContent>
	<LoadingContent>
		<MudText>Loading...</MudText>
	</LoadingContent>
	<PagerContent>
		<MudTablePager />
	</PagerContent>
</MudTable>

@code {
	protected override async Task<IResponse> OnDeleteAsync(InsuranceType model)
	{
		var response = await Mediator.Send(new DeleteInsuranceTypeCommand { Id = model.Id });
		return response;
	}
}